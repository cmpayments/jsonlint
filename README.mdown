# JSON Lint for PHP [![Build Status](https://img.shields.io/travis/cmpayments/jsonlint.svg)](https://travis-ci.org/cmpayments/jsonlint)

![License](https://img.shields.io/packagist/l/cmpayments/jsonlint.svg)
[![Latest Stable Version](https://img.shields.io/packagist/v/cmpayments/jsonlint.svg)](https://packagist.org/packages/cmpayments/jsonlint)
[![Total Downloads](https://img.shields.io/packagist/dt/cmpayments/jsonlint.svg)](https://packagist.org/packages/cmpayments/jsonlint)
[![Reference Status](https://www.versioneye.com/php/cmpayments:jsonlint/reference_badge.svg)](https://www.versioneye.com/php/cmpayments:jsonlint/references)

JSON Lint for PHP checks a string for invalid or malformed JSON, control character error, incorrect encoding or just plain old syntax errors.
It returns comprehensive feedback about the first error that occured in the string.
It supports both RFC 4627 and (its supeceding) RFC 7159

Usage
-----

```php
use CMPayments\JsonLint\JsonParser;

$parser = new JsonParser();
    
// returns null if it's valid json, or a ParsingException object.
$parser->lint($json);

// Call $parser->getMessage() on the exception object to get a well formatted error message error like this
// **Expected one of: 'STRING', '}' when trying to match 'id' on line 2, column 9**

// Call $parser->getDetails() on the exception to get more info.
```

Installation
------------

For a quick install with Composer use:

    $ composer require cmpayments/jsonlint

JSON Lint can easily be used within another app if you have a
[PSR-4](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md)
autoloader, or it can be installed through [Composer](https://getcomposer.org/).

Requirements
------------

- PHP 5.3+
- [optional] PHPUnit 3.5+ to execute the test suite (phpunit --version)

Submitting bugs and feature requests
------------------------------------

Bugs and feature request are tracked on [GitHub](https://github.com/cmpayments/jsonlint/issues)

Todo
----

- [ ] Add support for keys without double quotes*

*RFC 4627 states that an object is an unordered collection of zero or more key/value pairs, where a key is a string and a value is a string, number, boolean, null, object, or array.
This JSON linter tends to be more lenient towards keys without quotes in order to accept request from a JavaScript frontend.

Author
------

Boy Wijnmaalen - <boy.wijnmaalen@cmtelecom.com> - <https://twitter.com/boywijnmaalen>

License
-------

JSON Lint is licensed under the MIT License - see the LICENSE file for details

Acknowledgements
----------------

This library is based on [Seldaek/jsonlint](https://github.com/Seldaek/jsonlint) and [zaach/jsonlint](https://github.com/zaach/jsonlint).
